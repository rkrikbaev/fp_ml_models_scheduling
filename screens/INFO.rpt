{"top":0,"left":0,"width":1914,"height":1014,"_id":6,"_type":"Report","_items":{"4":{"top":545,"left":20,"_id":4,"_type":"TableDatasource","height":36,"source_table":"model_control","fields":{"_folder":{"type":"string"},"_name":{"type":"string"},"disabled":{"type":"boolean"},"triggered":{"type":"boolean"},"model_type":{"type":"string"},"task_updated":{"type":"string","decode":"function(value,fields){\rconst dateObj = new Date();\r\rlet year = dateObj.getFullYear();\r\rlet month = dateObj.getMonth();\rmonth = ('0' + (month + 1)).slice(-2);\r// To make sure the month always has 2-character-format. For example, 1 => 01, 2 => 02\r\rlet date = dateObj.getDate();\rdate = ('0' + date).slice(-2);\r// To make sure the date always has 2-character-format\r\rlet hour = dateObj.getHours();\rhour = ('0' + hour).slice(-2);\r// To make sure the hour always has 2-character-format\r\rlet minute = dateObj.getMinutes();\rminute = ('0' + minute).slice(-2);\r// To make sure the minute always has 2-character-format\r\rlet second = dateObj.getSeconds();\rsecond = ('0' + second).slice(-2);\r// To make sure the second always has 2-character-format\r\rconst time = `${year}/${month}/${date} ${hour}:${minute}:${second}`;\rconsole.log(time);\r\rreturn time\r\r    }\r\r\r\r\r\r"},"model_config":{"type":"string"},"reset":{"type":"boolean"},"model_point":{"type":"string"},"task_status":{"type":"string"}},"filter":"{\n    \"logic\":\"and\",\n    \"filters\":[\n        {\n            \"field\": \"disabled\",\n            \"operator\": \"eq\",\n            \"value\": false\n        }]\n}","z_index":1,"_events":{"init":{"type":"SCRIPT","value":{"script":"function(VARS,element,context){\r\tfunction update(){\r\t    console.log(\"todo update\");\r\t    element.source().read();\r\t    context.setTimeout(update, 10000)\r\t}\r\tupdate();\r}"}}}},"5":{"top":5,"_id":5,"_type":"Grid","width":1530,"height":655,"datasource":"TableDatasource: 4","data":"[\n  {\n    \"task_status\": \"STDBY\",\n    \"model_type\": \"prophet\",\n    \"_name\": \"city1\"\n  },\n  {\n    \"task_status\": \"QUEUED\",\n    \"model_type\": \"prophet\",\n    \"column2\": \"cell 22\",\n    \"_name\": \"city1\"\n  },\n  {\n    \"task_status\": \"PENDING\",\n    \"model_type\": \"prophet\",\n    \"column2\": \"cell 32\",\n    \"_name\": \"city2\"\n  },\n  {\n    \"task_status\": \"SUCCESS\",\n    \"model_type\": \"prophet\",\n    \"column2\": \"cell 42\",\n    \"_name\": \"city3\"\n  },\n  {\n    \"task_status\": \"FAILED\",\n    \"model_type\": \"prophet\",\n    \"column2\": \"cell 42\",\n    \"_name\": \"city4\"\n  }\n]","config":"{\n    \"sortable\": true,\n    // \"resizable\": true,\n    // \"filterable\": true,\n    \"groupable\": true,\n    \"pageable\": true,\n    \"navigateable\": true,\n    // columnMenu: true,\n    \n    height: 640,\n    sortable: true,\n    reorderable: true,\n    groupable: true,\n    resizable: true,\n    filterable: true,\n    columnMenu: true,\n    pageable: true,\n    \n  \"columns\": [\n    {\n      \"field\": \"_folder\",\n      locked: true,\n      lockable: false,\n      width: 300,\n      \"headerTemplate\": '<div style=\"font-size: 14px; text-align: center; font-weight: regular\";><p style=\"white-space: normal\">Object</p></div>',\n    },\n    {\n      \"field\": \"_name\",\n      locked: true,\n      lockable: false,\n      width: 150,\n      \"headerTemplate\": '<div style=\"font-size: 14px; text-align: center; font-weight: regular\";><p style=\"white-space: normal\">Tag</p></div>',\n    },\n    {\n      \"field\": \"triggered\",\n      lockable: false,\n      width: 150,\n      \"headerTemplate\": '<div style=\"font-size: 14px; text-align: center; font-weight: regular\";><p style=\"white-space: normal\">Launched</p></div>',\n    },\n    {\n        field: \"task_status\",\n        locked: true,\n        lockable: false,\n        width: 150,\n        headerTemplate: '<div style=\"font-size: 14px; text-align: center; font-weight: regular\";><p style=\"white-space: normal\">Status</p></div>',\n        template: data => {\n            let backColor = \"gray\";\n            let fontColor = \"black\";\n            if (data.task_status === \"STDBY\") {\n              backColor = \"gray\"; \n            } else if (data.task_status === \"QUEUED\") {\n              backColor = \"blue\";\n              fontColor = \"white\"\n            } else if (data.task_status === \"PENDING\") {\n              backColor = \"gold\";\n              fontColor = \"black\";\n            } else if (data.task_status === \"SUCCESS\") {\n              backColor = \"green\";\n              fontColor = \"black\";\n            }else if (data.task_status === \"FAILED\") {\n              backColor = \"red\";\n              fontColor = \"gold\";\n            }\n            return `<div style=\"text-align:center;background-color:${backColor};color:${fontColor}\">${data.task_status}</div>`;\n        }\n    },\n    {\n      \"field\": \"task_updated\",\n      lockable: false,\n      width: 250,\n      \"headerTemplate\": '<div style=\"font-size: 14px; text-align: center; font-weight: regular\";><p style=\"white-space: normal\">Updated</p></div>',\n    },\n    {\n      \"field\": \"model_type\",\n      locked: true,\n      lockable: false,\n      width: 150,\n      \"headerTemplate\": '<div style=\"font-size: 14px; text-align: center; font-weight: regular\";><p style=\"white-space: normal\">Type</p></div>',\n    },\n    {\n    \"field\": \"action\",\n    // \"editable\": true,\n    // title: \"Restart\",\n     \"width\": 150,\n     locked: true,\n      lockable: false,\n    \"headerTemplate\": '<div style=\"font-size: 14px; text-align: center; font-weight: regular\";><p style=\"white-space: normal\">Restart</p></div>',\n    \"command\":[\n        {\n          name: \"Restart\",\n          visible:function(item){ \n            //   return item.task_status!=\"STDBY\"\n            return true\n          },\n          click:function(e){\n              const conn = fp_dev.getConnection();\n              e.preventDefault();\n              const tr = $(e.target).closest(\"tr\");\n              const data = this.dataItem(tr);\n              console.log(\"info\", `${data._folder}/${data._name}`);\n              \n              fp_dev.yesno('Restart the task?', ()=>{\n                    conn.edit_or_create_object({\n                        \".name\": data._name,\n                        \".folder\": data._folder,\n                        \".pattern\": \"/root/.patterns/model_control\",\n                        \"reset\": true,\n                    }, ()=>{console.log(`Данные записаны в тэг`);}, ()=>{console.log(\"Ошибка!\")}, 1000);\n                });\n            }\n        }]\n    },\n    {\n    \"field\": \"disable\",\n    // \"editable\": true,\n    \"width\": 150,\n      lockable: false,\n    title: \"Disable\",\n    \"headerTemplate\": '<div style=\"font-size: 14px; text-align: center; font-weight: regular\";><p style=\"white-space: normal\">Disable</p></div>',\n    \"command\":[\n        {\n          name: \"Disable\",\n          visible:function(item){ \n              return item.disabled == false\n            return true\n          },\n          click:function(e){\n              const conn = fp_dev.getConnection();\n              e.preventDefault();\n              const tr = $(e.target).closest(\"tr\");\n              const data = this.dataItem(tr);\n            //   console.log(\"info\", `${data._folder}/${data._name}`);\n              \n              fp_dev.yesno('Restart the task?', ()=>{\n                    conn.edit_or_create_object({\n                        \".name\": data._name,\n                        \".folder\": data._folder,\n                        \".pattern\": \"/root/.patterns/model_control\",\n                        \"disabled\": true,\n                    }, ()=>{console.log(`Данные записаны в тэг`);}, ()=>{console.log(\"Ошибка!\")}, 1000);\n                });\n            }\n        }]\n    }\n  ]\n}","_events":{}},"6":{"left":1440,"_id":6,"_type":"Button","width":80,"text":"refresh","_events":{"click":{"type":"SCRIPT","value":{"tags":{"ds":[{"source":"TableDatasource: 4"}]},"script":"function({ds},element,context){\r\tds.get().read();\r}"}}}},"@filter":{"_id":"@filter","_type":"Filter","height":1,"_events":{}}},"_index":{"4":[],"5":[],"6":[],"@filter":[]},"_events":{"init":{"type":"SCRIPT","value":{"script":"function(VARS,element,context){\r\t//VARS.my_var.set(element.get(\"width\"));\r\tconsole.log(\"СХЕМА - INFO\");\r}"}}}}